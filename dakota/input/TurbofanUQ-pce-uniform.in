# Usage:
# Change directory to F100-nozzle/dakota/input
# dakota -i TurbofanUQ-pce-uniform.in -o ../output/TurbofanUQ-pce-uniform.out

environment
  #graphics

method
  polynomial_chaos
    sparse_grid_level = 1
    #samples = 10000
    #seed = 12347 rng rnum2
    #response_levels = 1. 2. 4. 8. 16. 32. 64. 128. 256. 512. 1024. 2048. 4096. 8192. 16384. 32768.
    variance_based_decomp interaction_order = 2

variables
  #normal_uncertain = 9
    #means             =  0.6      3.06       0.83     0.87          24.5            0.95           0.95        0.85             0.97
    #std_deviations    =  0.03     0.1        0.05     0.05          0.5             0.01           0.01        0.05             0.01
    #descriptors       = 'bypass' 'fanPstag' 'fanEff' 'compressEff' 'compressPratio' 'burnerPstag' 'burnerEff' 'turbineEffPoly' 'turbineEffShaft'
  uniform_uncertain = 9
    lower_bound       =  0.51     2.76       0.68     0.72          23.0            0.92           0.92        0.7             0.94
    upper_bound    =  0.69     3.36        0.98     1.02          26.             0.98           0.98        1.             1.
    descriptors       = 'bypass' 'fanPstag' 'fanEff' 'compressEff' 'compressPratio' 'burnerPstag' 'burnerEff' 'turbineEffPoly' 'turbineEffShaft'

interface
    analysis_driver = 'matlab -wait -nojvm -nodisplay -nosplash < dakotaInterfaceNozzle.m'
    #analysis_driver = '"C:/<a long path here>/matlab.exe" -wait -nodisplay -nosplash -nodesktop -r "run dakotaInterfaceNozzle.m"' # For Windows (Untested)
        fork asynchronous evaluation_concurrency = 4
        work_directory named '/tmp/dakota_work' # Linux and Mac only, for Windows comment this line
        link_files '../../*' # Linux and Mac only
        #copy_files '../../*' # For Windows (Untested)
        directory_tag #directory_save
        file_tag #file_save
        parameters_file = 'params.in'
        results_file    = 'results.out'

responses
  response_functions = 4
  no_gradients
  no_hessians
  response_descriptors = 'thrust' 'sfc' 'massFlowRate' 'thermalEfficiency'



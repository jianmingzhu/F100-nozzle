# Usage:
# Change directory to F100-nozzle/dakota/input
# dakota -i TurbofanDUU-form2.in -o ../output/TurbofanDUU-form2.out

environment
    graphics
    output_precision = 16
    method_pointer = 'OPTIM'

method
    id_method = 'OPTIM'
    model_pointer = 'OPTIM_M'
        npsol_sqp
        convergence_tolerance = 1.e-8

model
    id_model = 'OPTIM_M'
    nested
        variables_pointer = 'OPTIM_V'
        sub_method_pointer = 'UQ'
        responses_pointer = 'OPTIM_R'
        primary_response_mapping   =   0.  0.   1. 0.   0. 0.   0. 0.   0.  0.     0. 0.
        secondary_response_mapping =   0.  0.   0. 0.   0. 0.   0. 0.   1.  3.     0. 0.
                                       0.  0.   0. 0.   0. 0.   0. 0.   0.  0.     1. 0.
                                       1.  0.   0. 0.   0. 0.   0. 0.   0.  0.     0. 0.

variables
    id_variables = 'OPTIM_V'
    continuous_design = 4
        initial_point    0.011      0.6      0.4             24.5
        lower_bounds     0.0001     0.001    0.05            10.
        upper_bounds     0.5        10.0     10.0            40.
        descriptors     'f'        'bypass' 'Abypass2Acore' 'compressPratio'

responses
    id_responses = 'OPTIM_R'
    objective_functions = 1
    nonlinear_inequality_constraints = 2
    nonlinear_inequality_lower_bounds = 0.       0.
    nonlinear_inequality_upper_bounds = 1672.15  0.7
    nonlinear_equality_constraints = 1
    nonlinear_equality_targets = 60000.
    numerical_gradients
        method_source dakota
        interval_type forward
        fd_gradient_step_size = 1.e-3
    no_hessians

method
    id_method = 'UQ'
    model_pointer = 'UQ_M'
    local_reliability

model
    id_model = 'UQ_M'
    single
        variables_pointer = 'UQ_V'
        interface_pointer = 'UQ_I'
        responses_pointer = 'UQ_R'

variables
    id_variables = 'UQ_V'
    continuous_design = 4
#    normal_uncertain = 10
#        means             =  0.62     3.06       0.84     0.87          24.5             0.95          0.95        0.85             0.97              0.4
#        std_deviations    =  0.01     0.05       0.01     0.01          0.1              0.01          0.01        0.015            0.01              0.007
#        lower_bound       =  0.59     2.99       0.82     0.84          24.0             0.92          0.94        0.83             0.95              0.38
#        upper_bound       =  0.64     3.14       0.86     0.88          25.0             0.98          0.99        0.87             0.99              0.42
#        descriptors       = 'bypass' 'fanPstag' 'fanEff' 'compressEff' 'compressPratio' 'burnerPstag' 'burnerEff' 'turbineEffPoly' 'turbineEffShaft' 'Abypass2Acore'

    normal_uncertain = 7
        means             =  3.06       0.84     0.87          0.95          0.95        0.85             0.97
        std_deviations    =  0.05       0.01     0.01          0.01          0.01        0.015            0.01
        lower_bound       =  2.99       0.82     0.84          0.92          0.94        0.83             0.95
        upper_bound       =  3.14       0.86     0.88          0.98          0.99        0.87             0.99
        descriptors       = 'fanPstag' 'fanEff' 'compressEff' 'burnerPstag' 'burnerEff' 'turbineEffPoly' 'turbineEffShaft'

interface
    id_interface = 'UQ_I'
    analysis_driver = 'matlab -wait -nojvm -nodisplay -nosplash < dakotaInterfaceNozzle.m'
    #analysis_driver = '"C:/<a long path here>/matlab.exe" -wait -nodisplay -nosplash -nodesktop -r "run dakotaInterfaceNozzle.m"' # For Windows (Untested)
        fork asynchronous evaluation_concurrency = 4
        work_directory named '/tmp/dakota_work' # Linux and Mac only, for Windows comment this line
        link_files '../../*' # Linux and Mac only
        #copy_files '../../*' # For Windows (Untested)
        directory_tag #directory_save
        file_tag #file_save
        parameters_file = 'params.in'
        results_file    = 'results.out'

responses
    id_responses = 'UQ_R'
    response_functions = 6
    numerical_gradients
        method_source dakota
        interval_type forward
        fd_gradient_step_size = 1.e-3
    no_hessians
    response_descriptors = 'thrust' 'sfc' 'massFlowRate' 'thermalEfficiency' 'turbineTstag' 'fanMach'

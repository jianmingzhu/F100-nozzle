# Usage:
# Change directory to F100-nozzle/dakota/input
# dakota -i TurbofanUQ-pce-params.in -o ../output/TurbofanUQ-pce-params.out

environment
    graphics
    tabular_data_file = 'Turbofan-samples.tab'
    output_precision = 16

method
  sampling
    #sparse_grid_level = 0
    #variance_based_decomp interaction_order = 2
    #normalized
    samples = 10000
    seed = 27

variables
  uniform_uncertain = 10
    lower_bound       =  0.57     2.95       0.82     0.84          24.0             0.92          0.94        0.83             0.95              0.27
    upper_bound       =  0.63     3.21       0.86     0.88          25.0             0.98          0.99        0.87             0.99              0.3
    descriptors       = 'bypass' 'fanPstag' 'fanEff' 'compressEff' 'compressPratio' 'burnerPstag' 'burnerEff' 'turbineEffPoly' 'turbineEffShaft' 'Abypass2Acore'

interface
    analysis_driver = 'matlab -wait -nojvm -nodisplay -nosplash < dakotaInterfaceNozzle.m'
    #analysis_driver = '"C:/<a long path here>/matlab.exe" -wait -nodisplay -nosplash -nodesktop -r "run dakotaInterfaceNozzle.m"' # For Windows (Untested)
        fork asynchronous evaluation_concurrency = 4
        work_directory named '/tmp/dakota_work' # Linux and Mac only, for Windows comment this line
        link_files '../../*' # Linux and Mac only
        #copy_files '../../*' # For Windows (Untested)
        directory_tag #directory_save
        file_tag #file_save
        parameters_file = 'params.in'
        results_file    = 'results.out'

responses
  response_functions = 4
  no_gradients
  no_hessians
  response_descriptors = 'thrust' 'sfc' 'massFlowRate' 'thermalEfficiency'
